//
//  StoreNumberView.swift
//  ShelfScanDemo
//

import SwiftUI

struct StoreNumberView: View {
    @Environment(\.presentationMode) var presentationMode
    @State private var storeNumber: String = ""
    @State private var showHomeView = false
    @State private var showAlert: Bool = false
    @FocusState private var isInputFocused: Bool
    @EnvironmentObject var tokenViewModel: TokenViewModel
    
    // Hardcoded valid store numbers
    private let validStoreNumbers = ["100", "200"]
    
    var body: some View {
        ZStack {
            Color(white: 1)
                .ignoresSafeArea()
            
            VStack(spacing: 20) {
                // App title
                Text("Compass Vision")
                    .font(.system(size: 34, weight: .semibold))
                    .foregroundColor(.black)
                    .padding(.bottom, 100)
                
                // Store number field
                VStack(alignment: .leading, spacing: 8) {
                    Text("Store Number")
                        .font(.system(size: 14, weight: .semibold))
                        .foregroundColor(.black)
                    
                    TextField("", text: $storeNumber)
                        .foregroundColor(.black)
                        .keyboardType(.numberPad)
                        .padding()
                        .frame(height: 56)
                        .background(Color.white)
                        .overlay(
                            RoundedRectangle(cornerRadius: 4)
                                .stroke(Color.gray, lineWidth: 0.7)
                        )
                        .focused($isInputFocused)
                }
                
                // Submit button
                Button(action: {
                    if validStoreNumbers.contains(storeNumber) {
                        showHomeView = true
                    } else {
                        showAlert = true
                    }
                }) {
                    Text("Submit")
                        .font(.system(size: 16, weight: .semibold))
                        .foregroundColor(.white)
                        .frame(maxWidth: .infinity)
                        .frame(height: 48)
                        .background(Color(red: 0/255, green: 113/255, blue: 220/255))
                        .cornerRadius(28)
                }
                
                Spacer()
                
                // Navigation to HomePageView (hidden)
                NavigationLink(
                    destination: HomePageView(inferenceViewModel: InferenceViewModel())
                        .environmentObject(tokenViewModel)
                        .navigationBarHidden(true),
                    isActive: $showHomeView
                ) {
                    EmptyView()
                }
                
                // Toolbar with Done button
                if isInputFocused {
                    HStack {
                        Spacer()
                        Button("Done") {
                            isInputFocused = false
                        }
                        .padding()
                    }
                    .background(Color(UIColor.systemGroupedBackground))
                }
            }
            .padding(.horizontal, 20)
            .navigationBarHidden(true)
            .alert(isPresented: $showAlert) {
                Alert(
                    title: Text("Error"),
                    message: Text("Invalid store number"),
                    dismissButton: .default(Text("OK"))
                )
            }
        }
    }
}

struct StoreNumberView_Previews: PreviewProvider {
    static var previews: some View {
        StoreNumberView()
            .environmentObject(TokenViewModel(networkService: NetworkService(keychainService: KeychainService.standard)))
    }
}
