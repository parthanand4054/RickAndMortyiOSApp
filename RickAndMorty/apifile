// In ProductSearchViewModel.swift
func search(query: String) {
    guard !query.isEmpty else { return }
    
    // Temporary workaround while OAuth is broken
    let mockProducts = [
        Product(upcNumber: "025000031250", 
               productName: "Kellogg's Froot Loops Cereal", 
               productShortDescription: "Colorful fruit-flavored cereal", 
               imageUrl: "https://example.com/frootloops.jpg"),
        Product(upcNumber: "038000844522", 
               productName: "Cheerios Original Cereal", 
               productShortDescription: "Heart-healthy whole grain oats", 
               imageUrl: "https://example.com/cheerios.jpg")
    ]
    
    DispatchQueue.main.asyncAfter(deadline: .now() + 1) { // Simulate network delay
        self.searchResults = mockProducts.filter { $0.productName.lowercased().contains(query.lowercased()) }
        self.isSearching = false
    }
    return
    
    // Comment out the real API call for now
    // service.searchItems(query: query)...
}
