//
//  HomePageView.swift

import SwiftUI

/// Simple home page to enter the product search and then enter the camera view
struct HomePageView: View {
    var inferenceViewModel: InferenceViewModel
    @State private var searchProductID: String = ""
    @State private var isLoading = false
    @State private var showAlert = false
    @State private var alertMessage = ""
    @State private var navigateToCamera = false
    
    var body: some View {
        NavigationView {
            VStack(spacing: 20) {
                // Search bar on the home page
                HStack {
                    Image(systemName: "magnifyingglass")
                    TextField("Enter product ID...", text: $searchProductID)
                        .textFieldStyle(RoundedBorderTextFieldStyle())
                        .keyboardType(.numberPad) // Since IDs are numeric
                }
                .padding()
                
                if isLoading {
                    ProgressView("Fetching embeddings...")
                        .padding()
                }
                
                // Navigation link that activates when we're ready to navigate
                NavigationLink(
                    destination: CameraView(inferenceVM: inferenceViewModel, searchProductID: searchProductID)
                        .navigationBarHidden(true),
                    isActive: $navigateToCamera
                ) {
                    EmptyView()
                }
                
                // Button to search for the product and fetch embeddings
                Button(action: {
                    searchForProduct()
                }) {
                    Text("Search Product")
                        .padding()
                        .foregroundColor(.white)
                        .background(Color.blue)
                        .cornerRadius(8)
                }
                .disabled(searchProductID.isEmpty || isLoading)
                .opacity(searchProductID.isEmpty || isLoading ? 0.6 : 1.0)
                
            }
            .navigationTitle("Home")
            .alert(isPresented: $showAlert) {
                Alert(
                    title: Text("Error"),
                    message: Text(alertMessage),
                    dismissButton: .default(Text("OK"))
                )
            }
        }
    }
    
    private func searchForProduct() {
        guard !searchProductID.isEmpty else { return }
        
        isLoading = true
        
        inferenceViewModel.fetchEmbeddings(for: searchProductID) { success in
            isLoading = false
            
            if success {
                // Navigate to camera view
                navigateToCamera = true
            } else {
                // Show error alert
                alertMessage = "Could not fetch embeddings for product ID \(searchProductID). Please try again."
                showAlert = true
            }
        }
    }
}
