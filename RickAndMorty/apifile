struct ExpandableItem: Identifiable {
    let id = UUID()
    let title: String
    var isChecked: Bool = false
    var isExpanded: Bool = false
}

struct ExpandableListView: View {
    @State private var items: [ExpandableItem] = [
        ExpandableItem(title: "Missing Items"),
        ExpandableItem(title: "Misplaced Items"),
        ExpandableItem(title: "Unknown Items"),
        ExpandableItem(title: "Correct Items")
    ]

    var body: some View {
        List {
            ForEach(items.indices, id: \.self) { index in
                VStack(alignment: .leading, spacing: 4) {
                    HStack {
                        Button(action: {
                            items[index].isChecked.toggle()
                            items[index].isExpanded = items[index].isChecked
                        }) {
                            Image(systemName: items[index].isChecked ? "checkmark.square" : "square")
                        }

                        Text(items[index].title)
                            .font(.headline)

                        Spacer()
                    }

                    if items[index].isExpanded {
                        Text("Additional details for \(items[index].title)")
                            .font(.subheadline)
                            .foregroundColor(.gray)
                            .transition(.opacity.combined(with: .slide))
                        Text("Additional details for \(items[index].title)")
                            .font(.subheadline)
                            .foregroundColor(.gray)
                            .transition(.opacity.combined(with: .slide))
                        Text("Additional details for \(items[index].title)")
                            .font(.subheadline)
                            .foregroundColor(.gray)
                            .transition(.opacity.combined(with: .slide))
                        Text("Additional details for \(items[index].title)")
                            .font(.subheadline)
                            .foregroundColor(.gray)
                            .transition(.opacity.combined(with: .slide))
                        Text("Additional details for \(items[index].title)")
                            .font(.subheadline)
                            .foregroundColor(.gray)
                            .transition(.opacity.combined(with: .slide))
                    }
                }
                .padding(.vertical, 8)
            }
        }
        .listStyle(.plain)
//        .animation(.easeInOut, value: items)
    }
}
